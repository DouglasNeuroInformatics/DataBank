/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as PortalImport } from './routes/portal';
import { Route as IndexImport } from './routes/index';
import { Route as SetupIndexImport } from './routes/setup/index';
import { Route as PublicDatasetsImport } from './routes/public/datasets';
import { Route as AuthLoginImport } from './routes/auth/login';
import { Route as AuthCreateAccountImport } from './routes/auth/create-account';
import { Route as AuthConfirmEmailCodeImport } from './routes/auth/confirm-email-code';
import { Route as PortalUserIndexImport } from './routes/portal/user/index';
import { Route as PortalProjectsIndexImport } from './routes/portal/projects/index';
import { Route as PortalDatasetsIndexImport } from './routes/portal/datasets/index';
import { Route as PortalDashboardIndexImport } from './routes/portal/dashboard/index';
import { Route as PublicDatasetDatasetIdImport } from './routes/public/dataset.$datasetId';
import { Route as PortalProjectsManageUsersImport } from './routes/portal/projects/manage-users';
import { Route as PortalProjectsCreateImport } from './routes/portal/projects/create';
import { Route as PortalProjectsProjectIdImport } from './routes/portal/projects/$projectId';
import { Route as PortalDatasetsManageManagersImport } from './routes/portal/datasets/manage-managers';
import { Route as PortalDatasetsCreateImport } from './routes/portal/datasets/create';
import { Route as PortalDatasetsDatasetIdImport } from './routes/portal/datasets/$datasetId';
import { Route as PortalProjectsEditInfoProjectIdImport } from './routes/portal/projects/edit-info.$projectId';
import { Route as PortalProjectsAddDatasetProjectIdImport } from './routes/portal/projects/add-dataset.$projectId';
import { Route as PortalProjectsProjectIdDatasetIdImport } from './routes/portal/projects/$projectId.$datasetId';
import { Route as PortalDatasetsEditInfoDatasetIdImport } from './routes/portal/datasets/edit-info.$datasetId';
import { Route as PortalProjectsAddColumnsProjectIdDatasetIdImport } from './routes/portal/projects/add-columns.$projectId.$datasetId';

// Create/Update Routes

const PortalRoute = PortalImport.update({
  id: '/portal',
  path: '/portal',
  getParentRoute: () => rootRoute
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute
} as any);

const SetupIndexRoute = SetupIndexImport.update({
  id: '/setup/',
  path: '/setup/',
  getParentRoute: () => rootRoute
} as any);

const PublicDatasetsRoute = PublicDatasetsImport.update({
  id: '/public/datasets',
  path: '/public/datasets',
  getParentRoute: () => rootRoute
} as any);

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute
} as any);

const AuthCreateAccountRoute = AuthCreateAccountImport.update({
  id: '/auth/create-account',
  path: '/auth/create-account',
  getParentRoute: () => rootRoute
} as any);

const AuthConfirmEmailCodeRoute = AuthConfirmEmailCodeImport.update({
  id: '/auth/confirm-email-code',
  path: '/auth/confirm-email-code',
  getParentRoute: () => rootRoute
} as any);

const PortalUserIndexRoute = PortalUserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => PortalRoute
} as any);

const PortalProjectsIndexRoute = PortalProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => PortalRoute
} as any);

const PortalDatasetsIndexRoute = PortalDatasetsIndexImport.update({
  id: '/datasets/',
  path: '/datasets/',
  getParentRoute: () => PortalRoute
} as any);

const PortalDashboardIndexRoute = PortalDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => PortalRoute
} as any);

const PublicDatasetDatasetIdRoute = PublicDatasetDatasetIdImport.update({
  id: '/public/dataset/$datasetId',
  path: '/public/dataset/$datasetId',
  getParentRoute: () => rootRoute
} as any);

const PortalProjectsManageUsersRoute = PortalProjectsManageUsersImport.update({
  id: '/projects/manage-users',
  path: '/projects/manage-users',
  getParentRoute: () => PortalRoute
} as any);

const PortalProjectsCreateRoute = PortalProjectsCreateImport.update({
  id: '/projects/create',
  path: '/projects/create',
  getParentRoute: () => PortalRoute
} as any);

const PortalProjectsProjectIdRoute = PortalProjectsProjectIdImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => PortalRoute
} as any);

const PortalDatasetsManageManagersRoute = PortalDatasetsManageManagersImport.update({
  id: '/datasets/manage-managers',
  path: '/datasets/manage-managers',
  getParentRoute: () => PortalRoute
} as any);

const PortalDatasetsCreateRoute = PortalDatasetsCreateImport.update({
  id: '/datasets/create',
  path: '/datasets/create',
  getParentRoute: () => PortalRoute
} as any);

const PortalDatasetsDatasetIdRoute = PortalDatasetsDatasetIdImport.update({
  id: '/datasets/$datasetId',
  path: '/datasets/$datasetId',
  getParentRoute: () => PortalRoute
} as any);

const PortalProjectsEditInfoProjectIdRoute = PortalProjectsEditInfoProjectIdImport.update({
  id: '/projects/edit-info/$projectId',
  path: '/projects/edit-info/$projectId',
  getParentRoute: () => PortalRoute
} as any);

const PortalProjectsAddDatasetProjectIdRoute = PortalProjectsAddDatasetProjectIdImport.update({
  id: '/projects/add-dataset/$projectId',
  path: '/projects/add-dataset/$projectId',
  getParentRoute: () => PortalRoute
} as any);

const PortalProjectsProjectIdDatasetIdRoute = PortalProjectsProjectIdDatasetIdImport.update({
  id: '/$datasetId',
  path: '/$datasetId',
  getParentRoute: () => PortalProjectsProjectIdRoute
} as any);

const PortalDatasetsEditInfoDatasetIdRoute = PortalDatasetsEditInfoDatasetIdImport.update({
  id: '/datasets/edit-info/$datasetId',
  path: '/datasets/edit-info/$datasetId',
  getParentRoute: () => PortalRoute
} as any);

const PortalProjectsAddColumnsProjectIdDatasetIdRoute = PortalProjectsAddColumnsProjectIdDatasetIdImport.update({
  id: '/projects/add-columns/$projectId/$datasetId',
  path: '/projects/add-columns/$projectId/$datasetId',
  getParentRoute: () => PortalRoute
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/portal': {
      id: '/portal';
      path: '/portal';
      fullPath: '/portal';
      preLoaderRoute: typeof PortalImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/confirm-email-code': {
      id: '/auth/confirm-email-code';
      path: '/auth/confirm-email-code';
      fullPath: '/auth/confirm-email-code';
      preLoaderRoute: typeof AuthConfirmEmailCodeImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/create-account': {
      id: '/auth/create-account';
      path: '/auth/create-account';
      fullPath: '/auth/create-account';
      preLoaderRoute: typeof AuthCreateAccountImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/login': {
      id: '/auth/login';
      path: '/auth/login';
      fullPath: '/auth/login';
      preLoaderRoute: typeof AuthLoginImport;
      parentRoute: typeof rootRoute;
    };
    '/public/datasets': {
      id: '/public/datasets';
      path: '/public/datasets';
      fullPath: '/public/datasets';
      preLoaderRoute: typeof PublicDatasetsImport;
      parentRoute: typeof rootRoute;
    };
    '/setup/': {
      id: '/setup/';
      path: '/setup';
      fullPath: '/setup';
      preLoaderRoute: typeof SetupIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/portal/datasets/$datasetId': {
      id: '/portal/datasets/$datasetId';
      path: '/datasets/$datasetId';
      fullPath: '/portal/datasets/$datasetId';
      preLoaderRoute: typeof PortalDatasetsDatasetIdImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/datasets/create': {
      id: '/portal/datasets/create';
      path: '/datasets/create';
      fullPath: '/portal/datasets/create';
      preLoaderRoute: typeof PortalDatasetsCreateImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/datasets/manage-managers': {
      id: '/portal/datasets/manage-managers';
      path: '/datasets/manage-managers';
      fullPath: '/portal/datasets/manage-managers';
      preLoaderRoute: typeof PortalDatasetsManageManagersImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/projects/$projectId': {
      id: '/portal/projects/$projectId';
      path: '/projects/$projectId';
      fullPath: '/portal/projects/$projectId';
      preLoaderRoute: typeof PortalProjectsProjectIdImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/projects/create': {
      id: '/portal/projects/create';
      path: '/projects/create';
      fullPath: '/portal/projects/create';
      preLoaderRoute: typeof PortalProjectsCreateImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/projects/manage-users': {
      id: '/portal/projects/manage-users';
      path: '/projects/manage-users';
      fullPath: '/portal/projects/manage-users';
      preLoaderRoute: typeof PortalProjectsManageUsersImport;
      parentRoute: typeof PortalImport;
    };
    '/public/dataset/$datasetId': {
      id: '/public/dataset/$datasetId';
      path: '/public/dataset/$datasetId';
      fullPath: '/public/dataset/$datasetId';
      preLoaderRoute: typeof PublicDatasetDatasetIdImport;
      parentRoute: typeof rootRoute;
    };
    '/portal/dashboard/': {
      id: '/portal/dashboard/';
      path: '/dashboard';
      fullPath: '/portal/dashboard';
      preLoaderRoute: typeof PortalDashboardIndexImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/datasets/': {
      id: '/portal/datasets/';
      path: '/datasets';
      fullPath: '/portal/datasets';
      preLoaderRoute: typeof PortalDatasetsIndexImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/projects/': {
      id: '/portal/projects/';
      path: '/projects';
      fullPath: '/portal/projects';
      preLoaderRoute: typeof PortalProjectsIndexImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/user/': {
      id: '/portal/user/';
      path: '/user';
      fullPath: '/portal/user';
      preLoaderRoute: typeof PortalUserIndexImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/datasets/edit-info/$datasetId': {
      id: '/portal/datasets/edit-info/$datasetId';
      path: '/datasets/edit-info/$datasetId';
      fullPath: '/portal/datasets/edit-info/$datasetId';
      preLoaderRoute: typeof PortalDatasetsEditInfoDatasetIdImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/projects/$projectId/$datasetId': {
      id: '/portal/projects/$projectId/$datasetId';
      path: '/$datasetId';
      fullPath: '/portal/projects/$projectId/$datasetId';
      preLoaderRoute: typeof PortalProjectsProjectIdDatasetIdImport;
      parentRoute: typeof PortalProjectsProjectIdImport;
    };
    '/portal/projects/add-dataset/$projectId': {
      id: '/portal/projects/add-dataset/$projectId';
      path: '/projects/add-dataset/$projectId';
      fullPath: '/portal/projects/add-dataset/$projectId';
      preLoaderRoute: typeof PortalProjectsAddDatasetProjectIdImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/projects/edit-info/$projectId': {
      id: '/portal/projects/edit-info/$projectId';
      path: '/projects/edit-info/$projectId';
      fullPath: '/portal/projects/edit-info/$projectId';
      preLoaderRoute: typeof PortalProjectsEditInfoProjectIdImport;
      parentRoute: typeof PortalImport;
    };
    '/portal/projects/add-columns/$projectId/$datasetId': {
      id: '/portal/projects/add-columns/$projectId/$datasetId';
      path: '/projects/add-columns/$projectId/$datasetId';
      fullPath: '/portal/projects/add-columns/$projectId/$datasetId';
      preLoaderRoute: typeof PortalProjectsAddColumnsProjectIdDatasetIdImport;
      parentRoute: typeof PortalImport;
    };
  }
}

// Create and export the route tree

interface PortalProjectsProjectIdRouteChildren {
  PortalProjectsProjectIdDatasetIdRoute: typeof PortalProjectsProjectIdDatasetIdRoute;
}

const PortalProjectsProjectIdRouteChildren: PortalProjectsProjectIdRouteChildren = {
  PortalProjectsProjectIdDatasetIdRoute: PortalProjectsProjectIdDatasetIdRoute
};

const PortalProjectsProjectIdRouteWithChildren = PortalProjectsProjectIdRoute._addFileChildren(
  PortalProjectsProjectIdRouteChildren
);

interface PortalRouteChildren {
  PortalDatasetsDatasetIdRoute: typeof PortalDatasetsDatasetIdRoute;
  PortalDatasetsCreateRoute: typeof PortalDatasetsCreateRoute;
  PortalDatasetsManageManagersRoute: typeof PortalDatasetsManageManagersRoute;
  PortalProjectsProjectIdRoute: typeof PortalProjectsProjectIdRouteWithChildren;
  PortalProjectsCreateRoute: typeof PortalProjectsCreateRoute;
  PortalProjectsManageUsersRoute: typeof PortalProjectsManageUsersRoute;
  PortalDashboardIndexRoute: typeof PortalDashboardIndexRoute;
  PortalDatasetsIndexRoute: typeof PortalDatasetsIndexRoute;
  PortalProjectsIndexRoute: typeof PortalProjectsIndexRoute;
  PortalUserIndexRoute: typeof PortalUserIndexRoute;
  PortalDatasetsEditInfoDatasetIdRoute: typeof PortalDatasetsEditInfoDatasetIdRoute;
  PortalProjectsAddDatasetProjectIdRoute: typeof PortalProjectsAddDatasetProjectIdRoute;
  PortalProjectsEditInfoProjectIdRoute: typeof PortalProjectsEditInfoProjectIdRoute;
  PortalProjectsAddColumnsProjectIdDatasetIdRoute: typeof PortalProjectsAddColumnsProjectIdDatasetIdRoute;
}

const PortalRouteChildren: PortalRouteChildren = {
  PortalDatasetsDatasetIdRoute: PortalDatasetsDatasetIdRoute,
  PortalDatasetsCreateRoute: PortalDatasetsCreateRoute,
  PortalDatasetsManageManagersRoute: PortalDatasetsManageManagersRoute,
  PortalProjectsProjectIdRoute: PortalProjectsProjectIdRouteWithChildren,
  PortalProjectsCreateRoute: PortalProjectsCreateRoute,
  PortalProjectsManageUsersRoute: PortalProjectsManageUsersRoute,
  PortalDashboardIndexRoute: PortalDashboardIndexRoute,
  PortalDatasetsIndexRoute: PortalDatasetsIndexRoute,
  PortalProjectsIndexRoute: PortalProjectsIndexRoute,
  PortalUserIndexRoute: PortalUserIndexRoute,
  PortalDatasetsEditInfoDatasetIdRoute: PortalDatasetsEditInfoDatasetIdRoute,
  PortalProjectsAddDatasetProjectIdRoute: PortalProjectsAddDatasetProjectIdRoute,
  PortalProjectsEditInfoProjectIdRoute: PortalProjectsEditInfoProjectIdRoute,
  PortalProjectsAddColumnsProjectIdDatasetIdRoute: PortalProjectsAddColumnsProjectIdDatasetIdRoute
};

const PortalRouteWithChildren = PortalRoute._addFileChildren(PortalRouteChildren);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/portal': typeof PortalRouteWithChildren;
  '/auth/confirm-email-code': typeof AuthConfirmEmailCodeRoute;
  '/auth/create-account': typeof AuthCreateAccountRoute;
  '/auth/login': typeof AuthLoginRoute;
  '/public/datasets': typeof PublicDatasetsRoute;
  '/setup': typeof SetupIndexRoute;
  '/portal/datasets/$datasetId': typeof PortalDatasetsDatasetIdRoute;
  '/portal/datasets/create': typeof PortalDatasetsCreateRoute;
  '/portal/datasets/manage-managers': typeof PortalDatasetsManageManagersRoute;
  '/portal/projects/$projectId': typeof PortalProjectsProjectIdRouteWithChildren;
  '/portal/projects/create': typeof PortalProjectsCreateRoute;
  '/portal/projects/manage-users': typeof PortalProjectsManageUsersRoute;
  '/public/dataset/$datasetId': typeof PublicDatasetDatasetIdRoute;
  '/portal/dashboard': typeof PortalDashboardIndexRoute;
  '/portal/datasets': typeof PortalDatasetsIndexRoute;
  '/portal/projects': typeof PortalProjectsIndexRoute;
  '/portal/user': typeof PortalUserIndexRoute;
  '/portal/datasets/edit-info/$datasetId': typeof PortalDatasetsEditInfoDatasetIdRoute;
  '/portal/projects/$projectId/$datasetId': typeof PortalProjectsProjectIdDatasetIdRoute;
  '/portal/projects/add-dataset/$projectId': typeof PortalProjectsAddDatasetProjectIdRoute;
  '/portal/projects/edit-info/$projectId': typeof PortalProjectsEditInfoProjectIdRoute;
  '/portal/projects/add-columns/$projectId/$datasetId': typeof PortalProjectsAddColumnsProjectIdDatasetIdRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/portal': typeof PortalRouteWithChildren;
  '/auth/confirm-email-code': typeof AuthConfirmEmailCodeRoute;
  '/auth/create-account': typeof AuthCreateAccountRoute;
  '/auth/login': typeof AuthLoginRoute;
  '/public/datasets': typeof PublicDatasetsRoute;
  '/setup': typeof SetupIndexRoute;
  '/portal/datasets/$datasetId': typeof PortalDatasetsDatasetIdRoute;
  '/portal/datasets/create': typeof PortalDatasetsCreateRoute;
  '/portal/datasets/manage-managers': typeof PortalDatasetsManageManagersRoute;
  '/portal/projects/$projectId': typeof PortalProjectsProjectIdRouteWithChildren;
  '/portal/projects/create': typeof PortalProjectsCreateRoute;
  '/portal/projects/manage-users': typeof PortalProjectsManageUsersRoute;
  '/public/dataset/$datasetId': typeof PublicDatasetDatasetIdRoute;
  '/portal/dashboard': typeof PortalDashboardIndexRoute;
  '/portal/datasets': typeof PortalDatasetsIndexRoute;
  '/portal/projects': typeof PortalProjectsIndexRoute;
  '/portal/user': typeof PortalUserIndexRoute;
  '/portal/datasets/edit-info/$datasetId': typeof PortalDatasetsEditInfoDatasetIdRoute;
  '/portal/projects/$projectId/$datasetId': typeof PortalProjectsProjectIdDatasetIdRoute;
  '/portal/projects/add-dataset/$projectId': typeof PortalProjectsAddDatasetProjectIdRoute;
  '/portal/projects/edit-info/$projectId': typeof PortalProjectsEditInfoProjectIdRoute;
  '/portal/projects/add-columns/$projectId/$datasetId': typeof PortalProjectsAddColumnsProjectIdDatasetIdRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/portal': typeof PortalRouteWithChildren;
  '/auth/confirm-email-code': typeof AuthConfirmEmailCodeRoute;
  '/auth/create-account': typeof AuthCreateAccountRoute;
  '/auth/login': typeof AuthLoginRoute;
  '/public/datasets': typeof PublicDatasetsRoute;
  '/setup/': typeof SetupIndexRoute;
  '/portal/datasets/$datasetId': typeof PortalDatasetsDatasetIdRoute;
  '/portal/datasets/create': typeof PortalDatasetsCreateRoute;
  '/portal/datasets/manage-managers': typeof PortalDatasetsManageManagersRoute;
  '/portal/projects/$projectId': typeof PortalProjectsProjectIdRouteWithChildren;
  '/portal/projects/create': typeof PortalProjectsCreateRoute;
  '/portal/projects/manage-users': typeof PortalProjectsManageUsersRoute;
  '/public/dataset/$datasetId': typeof PublicDatasetDatasetIdRoute;
  '/portal/dashboard/': typeof PortalDashboardIndexRoute;
  '/portal/datasets/': typeof PortalDatasetsIndexRoute;
  '/portal/projects/': typeof PortalProjectsIndexRoute;
  '/portal/user/': typeof PortalUserIndexRoute;
  '/portal/datasets/edit-info/$datasetId': typeof PortalDatasetsEditInfoDatasetIdRoute;
  '/portal/projects/$projectId/$datasetId': typeof PortalProjectsProjectIdDatasetIdRoute;
  '/portal/projects/add-dataset/$projectId': typeof PortalProjectsAddDatasetProjectIdRoute;
  '/portal/projects/edit-info/$projectId': typeof PortalProjectsEditInfoProjectIdRoute;
  '/portal/projects/add-columns/$projectId/$datasetId': typeof PortalProjectsAddColumnsProjectIdDatasetIdRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/portal'
    | '/auth/confirm-email-code'
    | '/auth/create-account'
    | '/auth/login'
    | '/public/datasets'
    | '/setup'
    | '/portal/datasets/$datasetId'
    | '/portal/datasets/create'
    | '/portal/datasets/manage-managers'
    | '/portal/projects/$projectId'
    | '/portal/projects/create'
    | '/portal/projects/manage-users'
    | '/public/dataset/$datasetId'
    | '/portal/dashboard'
    | '/portal/datasets'
    | '/portal/projects'
    | '/portal/user'
    | '/portal/datasets/edit-info/$datasetId'
    | '/portal/projects/$projectId/$datasetId'
    | '/portal/projects/add-dataset/$projectId'
    | '/portal/projects/edit-info/$projectId'
    | '/portal/projects/add-columns/$projectId/$datasetId';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/portal'
    | '/auth/confirm-email-code'
    | '/auth/create-account'
    | '/auth/login'
    | '/public/datasets'
    | '/setup'
    | '/portal/datasets/$datasetId'
    | '/portal/datasets/create'
    | '/portal/datasets/manage-managers'
    | '/portal/projects/$projectId'
    | '/portal/projects/create'
    | '/portal/projects/manage-users'
    | '/public/dataset/$datasetId'
    | '/portal/dashboard'
    | '/portal/datasets'
    | '/portal/projects'
    | '/portal/user'
    | '/portal/datasets/edit-info/$datasetId'
    | '/portal/projects/$projectId/$datasetId'
    | '/portal/projects/add-dataset/$projectId'
    | '/portal/projects/edit-info/$projectId'
    | '/portal/projects/add-columns/$projectId/$datasetId';
  id:
    | '__root__'
    | '/'
    | '/portal'
    | '/auth/confirm-email-code'
    | '/auth/create-account'
    | '/auth/login'
    | '/public/datasets'
    | '/setup/'
    | '/portal/datasets/$datasetId'
    | '/portal/datasets/create'
    | '/portal/datasets/manage-managers'
    | '/portal/projects/$projectId'
    | '/portal/projects/create'
    | '/portal/projects/manage-users'
    | '/public/dataset/$datasetId'
    | '/portal/dashboard/'
    | '/portal/datasets/'
    | '/portal/projects/'
    | '/portal/user/'
    | '/portal/datasets/edit-info/$datasetId'
    | '/portal/projects/$projectId/$datasetId'
    | '/portal/projects/add-dataset/$projectId'
    | '/portal/projects/edit-info/$projectId'
    | '/portal/projects/add-columns/$projectId/$datasetId';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  PortalRoute: typeof PortalRouteWithChildren;
  AuthConfirmEmailCodeRoute: typeof AuthConfirmEmailCodeRoute;
  AuthCreateAccountRoute: typeof AuthCreateAccountRoute;
  AuthLoginRoute: typeof AuthLoginRoute;
  PublicDatasetsRoute: typeof PublicDatasetsRoute;
  SetupIndexRoute: typeof SetupIndexRoute;
  PublicDatasetDatasetIdRoute: typeof PublicDatasetDatasetIdRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PortalRoute: PortalRouteWithChildren,
  AuthConfirmEmailCodeRoute: AuthConfirmEmailCodeRoute,
  AuthCreateAccountRoute: AuthCreateAccountRoute,
  AuthLoginRoute: AuthLoginRoute,
  PublicDatasetsRoute: PublicDatasetsRoute,
  SetupIndexRoute: SetupIndexRoute,
  PublicDatasetDatasetIdRoute: PublicDatasetDatasetIdRoute
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/portal",
        "/auth/confirm-email-code",
        "/auth/create-account",
        "/auth/login",
        "/public/datasets",
        "/setup/",
        "/public/dataset/$datasetId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/portal": {
      "filePath": "portal.tsx",
      "children": [
        "/portal/datasets/$datasetId",
        "/portal/datasets/create",
        "/portal/datasets/manage-managers",
        "/portal/projects/$projectId",
        "/portal/projects/create",
        "/portal/projects/manage-users",
        "/portal/dashboard/",
        "/portal/datasets/",
        "/portal/projects/",
        "/portal/user/",
        "/portal/datasets/edit-info/$datasetId",
        "/portal/projects/add-dataset/$projectId",
        "/portal/projects/edit-info/$projectId",
        "/portal/projects/add-columns/$projectId/$datasetId"
      ]
    },
    "/auth/confirm-email-code": {
      "filePath": "auth/confirm-email-code.tsx"
    },
    "/auth/create-account": {
      "filePath": "auth/create-account.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/public/datasets": {
      "filePath": "public/datasets.tsx"
    },
    "/setup/": {
      "filePath": "setup/index.tsx"
    },
    "/portal/datasets/$datasetId": {
      "filePath": "portal/datasets/$datasetId.tsx",
      "parent": "/portal"
    },
    "/portal/datasets/create": {
      "filePath": "portal/datasets/create.tsx",
      "parent": "/portal"
    },
    "/portal/datasets/manage-managers": {
      "filePath": "portal/datasets/manage-managers.tsx",
      "parent": "/portal"
    },
    "/portal/projects/$projectId": {
      "filePath": "portal/projects/$projectId.tsx",
      "parent": "/portal",
      "children": [
        "/portal/projects/$projectId/$datasetId"
      ]
    },
    "/portal/projects/create": {
      "filePath": "portal/projects/create.tsx",
      "parent": "/portal"
    },
    "/portal/projects/manage-users": {
      "filePath": "portal/projects/manage-users.tsx",
      "parent": "/portal"
    },
    "/public/dataset/$datasetId": {
      "filePath": "public/dataset.$datasetId.tsx"
    },
    "/portal/dashboard/": {
      "filePath": "portal/dashboard/index.tsx",
      "parent": "/portal"
    },
    "/portal/datasets/": {
      "filePath": "portal/datasets/index.tsx",
      "parent": "/portal"
    },
    "/portal/projects/": {
      "filePath": "portal/projects/index.tsx",
      "parent": "/portal"
    },
    "/portal/user/": {
      "filePath": "portal/user/index.tsx",
      "parent": "/portal"
    },
    "/portal/datasets/edit-info/$datasetId": {
      "filePath": "portal/datasets/edit-info.$datasetId.tsx",
      "parent": "/portal"
    },
    "/portal/projects/$projectId/$datasetId": {
      "filePath": "portal/projects/$projectId.$datasetId.tsx",
      "parent": "/portal/projects/$projectId"
    },
    "/portal/projects/add-dataset/$projectId": {
      "filePath": "portal/projects/add-dataset.$projectId.tsx",
      "parent": "/portal"
    },
    "/portal/projects/edit-info/$projectId": {
      "filePath": "portal/projects/edit-info.$projectId.tsx",
      "parent": "/portal"
    },
    "/portal/projects/add-columns/$projectId/$datasetId": {
      "filePath": "portal/projects/add-columns.$projectId.$datasetId.tsx",
      "parent": "/portal"
    }
  }
}
ROUTE_MANIFEST_END */
