name: databank
volumes:
  caddy_data:
  mongo_config:
  mongo_data:
services:
  caddy:
    image: caddy:2.7-alpine
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
  api:
    image: ghcr.io/douglasneuroinformatics/databank-api:${RELEASE_CHANNEL}
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./api/Dockerfile
    depends_on:
      - mongo
      - valkey
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_REPLICA_SET=rs0
      - MONGO_RETRY_WRITES=true
      - MONGO_WRITE_CONCERN=majority
      - API_DEV_SERVER_PORT
      - MONGO_PORT
      - MONGO_VERSION
      - VALKEY_PORT
      - VALKEY_VERSION
      - VALKEY_HOST
      - API_PORT=80
      - SMTP_HOST
      - SMTP_PORT
      - SMTP_AUTH_USERNAME
      - SMTP_AUTH_PASSWORD
      - SMTP_SENDER
      - SMTP_SECURE
      - SECRET_KEY
      - VALIDATION_TIMEOUT
      - MAX_VALIDATION_ATTEMPTS
    expose:
      - 80
  web:
    image: ghcr.io/douglasneuroinformatics/databank-web:${RELEASE_CHANNEL}
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./web/Dockerfile
    expose:
      - 80
  mongo:
    image: mongo:${MONGO_VERSION}
    command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    expose:
      - ${MONGO_PORT}
    restart: unless-stopped
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - ./mongo/config:/data/configdb
      - ./mongo/data:/data/db
  valkey:
    image: valkey/valkey:${VALKEY_VERSION}
    container_name: valkey
    healthcheck:
      test: ['CMD', 'valkey-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${VALKEY_PORT}:${VALKEY_PORT}
    volumes:
      - ./valkey-data:/valkey-data
